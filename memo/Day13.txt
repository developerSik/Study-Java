다중 상속
   여러 부모 클래스를 상속하는 것을 다중 상속이라고 한다.
   JAVA는 모호성 때문에 다중 상속을 지원하지 않는다.
   하지만 JDK8버전부터는 인터페이스에 default 메소드를 선언할 수 있으며,
   여러 개를 지정할 수 있는 인터페이스 특성상 다중 상속을 지원하는 것이나 다름이 없다.

모호성(ambiguity)
   하나의 자식이 여러 부모를 상속받을 때 부모 필드에 동일한 이름의 필드가 있다면,
   어떤 부모의 필드인지 알 수가 없다. 이를 모호성이라고 부른다.

모호성 해결 방법
   
- 상황1: 두 개의 인터페이스 내에 이름과 매개변수가 똑같은 메소드가 선언되어 있다.
- 해결1: 자식 클래스에서 재정의하여 사용한다. 원하는 부모의 필드에 접근하기 위해서는 "부모명.super.필드명"을 작성한다.

- 상황2: 부모 클래스의 public 메소드와 인터페이스의 디폴트 메소드의 이름과 매개변수가 똑같이 선언되어 있다.
- 해결2: 부모 클래스의 메소드가 사용된다.
-----------------------------------------------------------------------------------------------------
함수형 인터페이스(Functional Interface)
   인터페이스 중 추상메소드를 하나만 가지고 있는 인터페이스를 함수형 인터페이스라고 한다.
   이 때 @FunctionalInterface를 인터페이스 위에 작성하여 단 하나의 추상 메소드만 선언할 수 있도록
   제한해야 한다.

람다식(Lambda Expression)
   함수형 인터페이스에서는 한 개의 추상메소드만 존재하기 때문에 구현 시 메소드 이름이 딱히 필요가 없다.
   람다식은 이름이 없는 메소드로서 값처럼 사용이 가능하며, 매개변수로도 전달이 가능하다.
   따라서 람다식을 익명 메소드(Anonymous Method)라고도 부른다.

람다식 문법
   1. (매개변수 형식 나열, ...) -> 리턴값;
   2. (매개변수 형식 나열, ...) -> { 2개 이상의 문장 작성; return 리턴값; }
   ※ 매개변수가 1개일 경우 소괄호 생략 가능(매개변수가 아예 없거나 2개 이상일 경우 소괄호를 반드시 작성해야 한다)

람다식 기초 실습
   package는 lambdaTask1로 선언한다.

   PrintName 인터페이스 선언
   getFullName() 추상 메소드 선언
   - 성과 이름을 전달받는다.

   PrintNameTest 클래스 선언
   printFullName() 메소드 선언
   - 외부에서 구현된 PrintName을 전달받은 뒤 전체 이름을 출력
------------------------------------------------------------------------------------------------------
[심화 실습]
여러 개의 정수를 입력받아서 알맞는 덧셈, 뺄셈 결과를 확인하는 애플리케이션 제작

입력 예1) 7 + 35 - 9
출력 예1) 33

입력 예2) -9 + 8 + 10
출력 예2) 9

* "ABC".split("")은 [A][B][C] 3칸 문자열 배열로 리턴된다.
   "A,B,C".split(",")은 [A][B][C] 3칸 문자열 배열로 리턴된다.
   split("구분점")을 전달하면 문자열에서 동일한 구분점을 기준으로 문자열 값을 잘라낸 후 문자열 배열로 리턴한다.
   구분점을 여러 개 사용할 때에는 split("구분점|구분점")으로 사용하며, "+", "-"를 구분점으로 사용할 때에는 "\\+", "\\-"로 표현한다.
   예)"4 + 9".split("\\+")은 [4][9] 2칸 문자열 배열로 리턴

* 사용자가 정상적으로만 입력한다는 가정 하에 구현하도록 한다.
* 두 정수를 전달받은 후 int로 리턴하는 calc 추상메소드 선언(함수형 인터페이스 제작)
* 두 정수의 덧셈, 뺄셈을 구해주는 함수형 인터페이스를 리턴하는 static 메소드 선언(람다식 리턴)
* 전체 식을 전달받은 후 String[]로 리턴하는 getOpers 추상메소드 선언(함수형 인터페이스 제작)
* main메소드에 getOper를 람다식으로 구현
* 첫번째 정수가 음수일 경우 오류 해결

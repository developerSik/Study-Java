컴파일러 해석 방향
	위에서 아래로 좌에서 우로
-------------------------------------------------------------------------
기본 구조
	프로젝트
		패키지
			클래스(앞글자 대문자)
				메소드(이름 뒤에 소괄호)
					소스코드
--------------------------------------------------------------------------
출력 메소드
	1. print() : 마지막에 자동으로 줄바꿈되지 않고 아래 문장과 이어서 출력된다.
	2. println() : 마지막에 자동으로 줄바꿈된다.
	3. printf() : 서식 문자를 사용하여 출력할 수 있으며, 자동으로 줄바꿈되지 않는다.
--------------------------------------------------------------------------
변수 : 저장공간
	x	=	10
         저장공간의  대입	값(상수)	
	이름	연산자    	
--------------------------------------------------------------------------
자료형(type)
	자료형 type	byte	값

	정수형 int	4	1, 325, 52342, -31231, ...
	실수형 float	4	1.0F, 0.0F, 156.156F, -456.1596F, ....
	         double	8	1.0, 0.0, 156.156, -456.1596, ...
	문자형 char	2	'A', '강', '0' ...
	문자열 String	?	"정상식", "ABC", "A" ...
--------------------------------------------------------------------------
변수의 선언
	- 초기화
	자료형 변수명 = 초기값;
	예)
	int x = 10;
	x라는 이름의 저장공간이 할당(allocation) 그 안에 10이 들어간다.
주소
	int x = 10;
	x라는 이름의 저장공간이 RAM에 할당되면 고유한 값인 주소값이 부여된다.
	계속 실행되거나 종료되는 프로그램이 있기 때문에, 주소값은 변경 될 수 있으나
	중복은 없다.
--------------------------------------------------------------------------
변수의 사용
	int data = 10;
	data = 20;
	data + 9;
	data = data + 99;
	System.out.print(data);
--------------------------------------------------------------------------
변수 선언 시 주의사항
	1. 같은 이름의 변수로 선언할 수 없다.
	2. 초기화를 해준다.
	3. 되도록 선언부에 한꺼번에 선언한다.(영역 상단)
--------------------------------------------------------------------------
변수명 주의사항
	1. 문자로 시작해야 한다.
	2. 특수문자를 사용할 수 없다. 단, _ 는 허용한다.
	3. 소문자로 시작한다.
	4. 공백을 사용할 수 없다.

	good_boy : 언더바 표기법
	goodBoy : 카멜 표기법

	5. 되도록 한글은 사용하지 않는다.
	6. 명사로 사용한다.
	7. 뜻이 있는 단어를 사용한다.
--------------------------------------------------------------------------
변수를 사용하는 이유
	1. 반복되는 값을 쉽게 관리하기 위해서
	2. 의미 없는 값을 하나의 정보로 만들기 위해서(자료구조)

--------------------------------------------------------------------------

상수 
	항상 그대로 인 수.
	값을 변경할 수 없도록 한다.

	final 자료형 상수명 = 값;
--------------------------------------------------------------------------
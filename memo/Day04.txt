논리형(boolean)
	참 : true
	거짓 : false

	boolean(1byte) = true, false

조건식
	결과가 참 또는 거짓, 둘 중 하나가 나오는 식.
	참 또는 거짓 값.
	예) boolean check = 10 == 11;

	관계 연산자
		==	: 같다
		!=	: 같지 않다
		>, <	: 초과, 미만
		>=, <=	: 이상, 이하

	논리 연산자
		&&(AND), A && B, 두 조건식 모두 참이면 참
		||(OR), A || B, 둘 중 하나라도 참이면 참

	단항 연산자
		!(NOT), !A, 조건식이 참이면 거짓으로, 거짓이면 참으로 변경


	삼항 연산자
		? :, 조건식 ? 참 : 거짓, 조건식이 참이면 참, 거짓이면 거짓
		예) int result = 10 > 11 ? 10 : 11;

	삼항 연산자를 사용해야 할 때
		조건식이 딱 한 개 있을 때
----------------------------------------------------------------------------------------
제어문

▶ 조건문
	▷ if문

	if(조건식){
		실행할 문장;
	}
	if(조건식){
		실행할 문장;
	}
	if(조건식){
		실행할 문장;
	}...

	if(조건식){
		실행할 문장;

	}else if(조건식){
		실행할 문장;
	}...

	}else{
		실행할 문장;
	}



	▷ switch문

	switch(변수명){
	case 값1:
		실행할 문장;
		break;
	case 값2:
		실행할 문장;
		break;
	case 값3:
		실행할 문장;
		break;
	case 값4:
		실행할 문장;
		break;
	...
	default:
		실행할 문장;
		break;
	}

삼항 연산자, if문, switch문의 비교

	삼항 연산자: 조건식이 1개 있을 경우 사용
	if문: 조건식에 비교(>, <, >=, <=) 연산자를 사용하거나, 여러 개의 조건식을 논리 연산자로 연결할 때 사용
	switch문: 하나의 변수에 여러 개의 값이 담길 수 있고, 각 값이 같은 지를 비교할 때 사용
------------------------------------------------------------------------------------------------------
대입 연산자(복합 대입 연산자, 누적 연산자)
	+=, -=, *=, /=, %=,...	

	int money = 10000;
	// money = money - 1500;
	money -= 1500;
	System.out.println(money);

	int data = 10;
	// data = data + 1;
	// data += 1;
	data++;
	System.out.println(data);

증감 연산자
	++, --

	전위형: 해당 라인부터 바로 적용
		++data, --data

	후위형: 다음 라인부터 적용
		data++, data--
------------------------------------------------------------------------------------------------------
▶ 반복문

▷ for문
▷ while문
▷ do~while문

























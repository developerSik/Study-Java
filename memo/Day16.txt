Object 클래스
   1. toString()
      항상 객체명을 출력할 때에는 toString()을 붙여서 출력해준다.
      따라서 객체명만 출력메소드에 전달하더라도 toString()의 문자열 값이 출력된다.
      기본적으로 Object에서는 소속과 필드 주소를 문자열로 리턴해주지만,
      실사용에서는 불필요한 정보이기 때문에, 재정의한 뒤 필드의 정보를 확인하도록 구현한다.
      실무에서는 클래스 선언 시 각 필드의 초기화 여부를 확인하기 위해 toString()을 재정의하여 사용한다.

   2. equals()
      주소값을 비교하는 메소드이며 ==과 동일하다.
      String 클래스에서 equals()를 값 비교로 재정의하여 사용하기 때문에
      문자열 비교는 무조건 equals()로 비교한다.
      만약 주소 비교가 아닌 원하는 필드의 비교가 필요하다면 반드시 equals()를 재정의해서 사용해야 한다.

   3. hashCode()
	JVM에서 관리하는 중복 없는 값. 실제 메모리에 할당되는 주소와 다르다.
	String 클래스에서는 필드의 해시코드 값이 아닌 문자열 상수값의 해시코드를 리턴하도록 재정의하였다.
	※ 컬렉션 프레임워크 챕터에서 재정의 목적을 이해하도록 한다.
-----------------------------------------------------------------------------------------------------------------------------
Wrapper Class : 기본 자료형들의 클래스 타입
	클래스타입 객체 = new 클래스타입(일반타입의 값); // boxing, 권장하지 않는다(Deprecated).
	클래스타입 객체 = 클래스타입.valueOf(일반타입의 값); // boxing
	일반타입 변수 = 객체.000Value(); //unboxing

	JDK4버전 이상부터는 auto를 지원한다.
	따라서 
	클래스타입 객체 = 일반타입의 값; // auto boxing
	일반타입 변수 = 객체; // auto unboxing
-----------------------------------------------------------------------------------------------------------------------------
알고리즘
	어떤 문제가 발생되었을 때 해결할 수 있는 절차 혹은 순서.
자료구조(저장소)
	의미 없는 데이터를 하나의 정보로 만들어주는 알고리즘들의 집합.
	수집한 자료를 저장하는 방법.

컬렉션 프레임워크(Collection Framework)
	많은 데이터를 쉽고 효과적으로 관리할 수 있는 표준화된 방법을 제공하는 클래스들의 집합.

1. List extends Collection
	- Vector : 용량 관리, 보안성 강화, 처리량 감소
	- LinkedList : FILO로 인해 넣을 때는 빨라도 원하는 위치의 데이터를 가져오는 것이 상대적으로 느리다.
	- ArrayList : 인덱스로 데이터를 관리한다. 컬렉션 클래스 중에서 실무에서 가장 많이 사용되는 클래스이다.
			배열의 특징인 인덱스를 이용하여 값을 저장하고 관리한다.
	※ 배열과 ArrayList의 차이
		배열은 길이의 제한을 두어야할 때 자주 사용되고,
		ArrayList는 몇 개의 데이터가 들어올 지 알 수 없을 때 사용한다.
------------------------------------------------------------------------------------------------------------------------------
[심화 실습]
	User 클래스 선언
	- 이름, 아이디, 비밀번호, 휴대폰 번호
	- private 접근자 사용
	- 기본 생성자 선언
	- toString() 재정의
	
	DBConnecter 클래스 선언
	- 회원 정보를 담을 DB를 ArrayList로 선언
	
	UserField 클래스 선언
	- 아이디 중복검사
	- 회원가입
	- 로그인
	- 암호화
	- 비밀번호 변경(마이페이지)
	- 인증번호 전송
2. Set
3. Map